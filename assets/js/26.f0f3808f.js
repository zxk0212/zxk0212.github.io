(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{392:function(t,e,r){"use strict";r.r(e);var a=r(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"结构型模式简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结构型模式简介"}},[t._v("#")]),t._v(" 结构型模式简介")]),t._v(" "),r("p",[t._v("结构型模式（Structural Pattern）描述如何将类或者对象结合在一起形成更大的结构，就像搭积木，可以通过简单的积木，组合形成，复杂的、功能更加强大的结构。")]),t._v(" "),r("p",[t._v("结构型模式还可以分为类结构模型和对象结构模型。")]),t._v(" "),r("ul",[r("li",[t._v("类结构模型\t\t关心类的组合，由多个类可以组合成一个更大的系统，在结构型模式中一般只存在继承关系和实现关系")]),t._v(" "),r("li",[t._v("对象结构模型    关心类与对象的组合，通过关联关系使得在一个类中定义另一个类的实例对象，然后通过该对象调用其方法。根据合成复用原则，在系统中尽量使用关联关系来替代继承关系，因此大多数的结构型模式都是对象结构型模式。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);